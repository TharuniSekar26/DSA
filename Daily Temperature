Given an array of integers temperatures represents the daily temperatures, return an array answer such that answer[i] is the number of days you have to wait after the ith day to get a warmer temperature. If there is no future day for which this is possible, keep answer[i] == 0 instead.
Input Format

First Line is the number of elemenst you want in array
Second line, give the array elements
Constraints

1 <= temperatures.length <= 105
30 <= temperatures[i] <= 100
Output Format

Array within the array
Sample Input 0

8
73 74 75 71 69 72 76 73
Sample Output 0

1 1 4 2 1 1 0 0
Sample Input 1

4
30 40 50 60
Sample Output 1

1 1 1 0

================================================================


import java.io.*;
import java.util.*;

public class Solution {

    static void calculate_DT(int n, int temp[], int DT[]){

        Stack<Integer> st = new Stack<>();
        for (int i = 0; i < n; i++) {

            while (!st.isEmpty() && temp[st.peek()] < temp[i]){
                DT[st.peek()] = i-st.peek();
                st.pop();
            }

            st.push(i);
        }
    }

    static void printArray(int DT[])
    {
        for(int i: DT)
            System.out.print(i+" ");
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int arr [] = new int[n];
        int DT[] = new int[n];
        for(int i = 0;i<n;i++){
            arr[i]= sc.nextInt();
        }
        calculate_DT(n,arr,DT);
        printArray(DT);
    }
}
