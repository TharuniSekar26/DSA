Given an integer array nums, rotate the array to the right by k steps, where k is non-negative.

Input Format

First line contains the value of size of your array
Line consists of 'n' space seperated integers representing the values present in the Array
Third line having the K value, how much you want to rotate
Constraints

1 <= nums.length <= 10^5
-231 <= nums[i] <= 231 - 1
0 <= k <= 10^5
Output Format

Rotated Array
Sample Input 0

7
1 2 3 4 5 6 7
3
Sample Output 0

5 6 7 1 2 3 4
Explanation 0

rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]
Sample Input 1

4
-1 -100 3 99
2
Sample Output 1

3 99 -1 -100
Explanation 1

rotate 1 steps to the right: [99,-1,-100,3]
rotate 2 steps to the right: [3,99,-1,-100]
========================================================================

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    Scanner sw = new Scanner(System.in);
        int n=sw.nextInt();
        int a[]=new int[n];
        for(int i=0;i<n;i++){
            a[i]=sw.nextInt();
        }
        int r=sw.nextInt();
        r=r%n;
        for(int i=n-r;i<n;i++) System.out.print(a[i]+" ");
        for(int i=0;i<n-r;i++) System.out.print(a[i]+" ");
    }
}


#include<stdio.h>
int main(){
    int n=5;
    int arr[n];
    //getting input
    for(int i=0;i<n;i++){
        scanf("%d",&arr[i]);
    }
    int k=2;
    //rotation
    while(k>0){
        int temp = arr[n-1];
        for(int i=n-2;i>=0;i--){
            arr[i+1]=arr[i];
        }
        arr[0]=temp;
        k--;
    }
    //printing array
    for(int i=0;i<n;i++){
        printf("%d ",arr[i]);
    }
    return 0;
}
