Given a singly linked list of integers and position 'i', delete the node present at the 'i-th' position in the linked list recursively.
Note : Assume that the Indexing for the linked list always starts from 0.
Input Format

The first line of each test case or query contains the elements of the singly linked list separated by a single space.
The second line of input contains a single integer depicting the value of 'i'.
Remember/Consider :
While specifying the list elements for input, -1 indicates the end of the singly linked list and hence, would never be a list element
Constraints

Time:- 1 sec
Output Format

Output for every test case will be printed in a seperate line.
Sample Input 0

3 4 5 2 6 1 9 -1
3
Sample Output 0

3 4 5 6 1 9
Sample Input 1

30 -1
0

=========================================================================

import java.io.*;
import java.util.*;

public class demo {

    static node head = null;
    static node tail = null;
    static int ind = -1;
    static class node{
        int data;
        node next;

        node(int a){
            this.data= a;
            this.next=null;
        }
    }

    static void insert(int a){
        node newnode = new node(a);
        if(head == null){
            head = newnode;
            tail = newnode;
        }
        else{
            tail.next= newnode;
            tail = newnode;
        }
    }

    static void delInd(node h, int i){

        if(head == null)
            return;


        for(int j=0; h!=null && j<i-1;j++){
            h=h.next;
        }

        if(i==0){
            head=h.next;
            return;
        }

        if(h==null || h.next ==null)
            return;

        else{
            h.next=h.next.next;
        }

    }

    static void print(node h){
        while(h!=null ){
            System.out.print(h.data+" ");
            h=h.next;
        }
    }


    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while(true){
            int a = sc.nextInt();
            if(a==-1)   
                break;
            insert(a);
        }

        int ind = sc.nextInt();

        delInd(head,ind);
        print(head);
    }
}
