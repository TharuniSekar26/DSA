A linked list is said to contain a cycle if any node is visited more than once while traversing the list. Given a pointer to the head of a linked list, determine if it contains a cycle. If it does, return 1. Otherwise, return 0.

======================================================

    // Complete the hasCycle function below.

    /*
     * For your reference:
     *
     * SinglyLinkedListNode {
     *     int data;
     *     SinglyLinkedListNode next;
     * }
     *
     */
static boolean hasCycle(SinglyLinkedListNode head) {
        SinglyLinkedListNode fast = head;
        SinglyLinkedListNode slow = head;

        while(fast.next!=null && fast.next.next!=null){
            slow = slow.next;
            fast=fast.next.next;
            if(fast==slow)
                return true;
        }
        return false;

    }

   
