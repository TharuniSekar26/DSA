Given two strings s and t, determine if they are isomorphic.
Two strings s and t are isomorphic if the characters in s can be replaced to get t.
All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself.
Input Format

First Line string 1
Second Line string 2
Constraints

1 <= s.length <= 5 * 104
t.length == s.length
Output Format

true or false
Sample Input 0

egg
add
Sample Output 0

true
Sample Input 1

foo
bar
Sample Output 1

false

========================================================

import java.io.*;
import java.util.*;

class Solution {
    static int size = 256;

    static boolean areIsomorphic(String str1, String str2){

        int m = str1.length();
        int n = str2.length();


        if (m != n)
            return false;

        Boolean[] marked = new Boolean[size];
        Arrays.fill(marked, Boolean.FALSE);

        int[] map = new int[size];
        Arrays.fill(map, -1);

        for (int i = 0; i < n; i++) {

            if (map[str1.charAt(i)] == -1) {

                if (marked[str2.charAt(i)] == true)
                    return false;

                marked[str2.charAt(i)] = true;


                map[str1.charAt(i)] = str2.charAt(i);
            }

            else if (map[str1.charAt(i)] != str2.charAt(i))
                return false;
        }

        return true;
    }

    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        String s1 = sc.nextLine();
        String s2 = sc.nextLine();

        boolean res = areIsomorphic(s1,s2);
        System.out.println(res);
    }
}
